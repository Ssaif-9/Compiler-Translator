
/********************************************************/
/*						Input C code						/*
/********************************************************/



a = (a + b) + 1;
a = a / b;
a = a * b;
a = a - b;

    int a = 1;
    int b;
    double z;
    float f = 1.12;
    
    if(a > 0)
    {
        a = a + 1;
        a = 8;
    }

    for(int i = 0; i < 5; i++)
    {
        a = a + b;
    }

    while (a < b)
    {
        a = 6;
        b = 7;
    }

    a = a + b;

 

/********************************************************/
/*						Translate C code To Python Code						*/
/********************************************************/

a = ( a + b ) + 1
a = a / b
a = a * b
a = a - b
a = 1
b = None
f = 1.12
if a > 0:
    a = a + 1
    a = 8
    a = a + b
while a < b:
    a = 6
    b = 7
a = a + b
/********************************************************/
/*						Output of  Tokenizer						
/********************************************************/

[('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('LEFT_PAREN', '('), ('IDENTIFIER', 'a'), ('ADDITIVE_OP', '+'), ('IDENTIFIER', 'b'), ('RIGHT_PAREN', ')'), ('ADDITIVE_OP', '+'), ('INTEGER_CONSTANT', '1'), ('SEMICOLON', ';'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('IDENTIFIER', 'a'), ('MULTIPLICATIVE_OP', '/'), ('IDENTIFIER', 'b'), ('SEMICOLON', ';'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('IDENTIFIER', 'a'), ('MULTIPLICATIVE_OP', '*'), ('IDENTIFIER', 'b'), ('SEMICOLON', ';'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('IDENTIFIER', 'a'), ('ADDITIVE_OP', '-'), ('IDENTIFIER', 'b'), ('SEMICOLON', ';'), ('INT', 'int'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('INTEGER_CONSTANT', '1'), ('SEMICOLON', ';'), ('INT', 'int'), ('IDENTIFIER', 'b'), ('SEMICOLON', ';'), ('DOUBLE', 'double'), ('IDENTIFIER', 'z'), ('SEMICOLON', ';'), ('FLOAT', 'float'), ('IDENTIFIER', 'f'), ('ASSIGNMENT_OP', '='), ('FLOAT_CONSTANT', '1.12'), ('SEMICOLON', ';'), ('KEYWORD', 'if'), ('LEFT_PAREN', '('), ('IDENTIFIER', 'a'), ('RELATIONAL_OP', '>'), ('INTEGER_CONSTANT', '0'), ('RIGHT_PAREN', ')'), ('LEFT_BRACE', '{'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('IDENTIFIER', 'a'), ('ADDITIVE_OP', '+'), ('INTEGER_CONSTANT', '1'), ('SEMICOLON', ';'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('INTEGER_CONSTANT', '8'), ('SEMICOLON', ';'), ('RIGHT_BRACE', '}'), ('KEYWORD', 'for'), ('LEFT_PAREN', '('), ('INT', 'int'), ('IDENTIFIER', 'i'), ('ASSIGNMENT_OP', '='), ('INTEGER_CONSTANT', '0'), ('SEMICOLON', ';'), ('IDENTIFIER', 'i'), ('RELATIONAL_OP', '<'), ('INTEGER_CONSTANT', '5'), ('SEMICOLON', ';'), ('IDENTIFIER', 'i'), ('INCREMENT_OP', '++'), ('RIGHT_PAREN', ')'), ('LEFT_BRACE', '{'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('IDENTIFIER', 'a'), ('ADDITIVE_OP', '+'), ('IDENTIFIER', 'b'), ('SEMICOLON', ';'), ('RIGHT_BRACE', '}'), ('KEYWORD', 'while'), ('LEFT_PAREN', '('), ('IDENTIFIER', 'a'), ('RELATIONAL_OP', '<'), ('IDENTIFIER', 'b'), ('RIGHT_PAREN', ')'), ('LEFT_BRACE', '{'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('INTEGER_CONSTANT', '6'), ('SEMICOLON', ';'), ('IDENTIFIER', 'b'), ('ASSIGNMENT_OP', '='), ('INTEGER_CONSTANT', '7'), ('SEMICOLON', ';'), ('RIGHT_BRACE', '}'), ('IDENTIFIER', 'a'), ('ASSIGNMENT_OP', '='), ('IDENTIFIER', 'a'), ('ADDITIVE_OP', '+'), ('IDENTIFIER', 'b'), ('SEMICOLON', ';')]
/********************************************************/
/*						Parse Tree						/*
/********************************************************/

|_Program
  |_AssignmentStatement
    |_Identifier
      |_a
    |_=
    |_Expression
      |_Term
        |_Factor
          |_(
          |_Expression
            |_Term
              |_Factor
                |_Identifier
                  |_a
            |_+
            |_Expression
              |_Term
                |_Factor
                  |_Identifier
                    |_b
          |_)
      |_+
      |_Expression
        |_Term
          |_Factor
            |_1
    |_;
  |_AssignmentStatement
    |_Identifier
      |_a
    |_=
    |_Expression
      |_Term
        |_Factor
          |_Identifier
            |_a
        |_/
        |_Term
          |_Factor
            |_Identifier
              |_b
    |_;
  |_AssignmentStatement
    |_Identifier
      |_a
    |_=
    |_Expression
      |_Term
        |_Factor
          |_Identifier
            |_a
        |_*
        |_Term
          |_Factor
            |_Identifier
              |_b
    |_;
  |_AssignmentStatement
    |_Identifier
      |_a
    |_=
    |_Expression
      |_Term
        |_Factor
          |_Identifier
            |_a
      |_-
      |_Expression
        |_Term
          |_Factor
            |_Identifier
              |_b
    |_;
  |_Declaration
    |_VariableDeclaration
      |_TypeSpecifier
        |_int
      |_AssignmentStatement
        |_Identifier
          |_a
        |_=
        |_Expression
          |_Term
            |_Factor
              |_1
    |_;
  |_Declaration
    |_VariableDeclaration
      |_TypeSpecifier
        |_int
      |_AssignmentStatement
        |_Identifier
          |_b
    |_;
  |_Declaration
    |_VariableDeclaration
      |_TypeSpecifier
        |_double
      |_AssignmentStatement
        |_Identifier
          |_z
    |_;
  |_Declaration
    |_VariableDeclaration
      |_TypeSpecifier
        |_float
      |_AssignmentStatement
        |_Identifier
          |_f
        |_=
        |_Expression
          |_Term
            |_Factor
              |_1.12
    |_;
  |_IfStatement
    |_if
    |_(
    |_condition
      |_Identifier
        |_a
      |_>
      |_Expression
        |_Term
          |_Factor
            |_0
    |_)
    |_{
    |_StatementList
      |_AssignmentStatement
        |_Identifier
          |_a
        |_=
        |_Expression
          |_Term
            |_Factor
              |_Identifier
                |_a
          |_+
          |_Expression
            |_Term
              |_Factor
                |_1
        |_;
      |_AssignmentStatement
        |_Identifier
          |_a
        |_=
        |_Expression
          |_Term
            |_Factor
              |_8
        |_;
    |_}
  |_ForStatement
    |_for
    |_(
    |_TypeSpecifier
      |_int
    |_AssignmentStatement
      |_Identifier
        |_i
      |_=
      |_Expression
        |_Term
          |_Factor
            |_0
      |_;
    |_condition
      |_Identifier
        |_i
      |_<
      |_Expression
        |_Term
          |_Factor
            |_5
    |_;
    |_StepStatement
      |_i
      |_++
    |_)
    |_{
    |_StatementList
      |_AssignmentStatement
        |_Identifier
          |_a
        |_=
        |_Expression
          |_Term
            |_Factor
              |_Identifier
                |_a
          |_+
          |_Expression
            |_Term
              |_Factor
                |_Identifier
                  |_b
        |_;
    |_}
  |_WhileStatement
    |_while
    |_(
    |_condition
      |_Identifier
        |_a
      |_<
      |_Expression
        |_Term
          |_Factor
            |_Identifier
              |_b
    |_)
    |_{
    |_StatementList
      |_AssignmentStatement
        |_Identifier
          |_a
        |_=
        |_Expression
          |_Term
            |_Factor
              |_6
        |_;
      |_AssignmentStatement
        |_Identifier
          |_b
        |_=
        |_Expression
          |_Term
            |_Factor
              |_7
        |_;
    |_}
  |_AssignmentStatement
    |_Identifier
      |_a
    |_=
    |_Expression
      |_Term
        |_Factor
          |_Identifier
            |_a
      |_+
      |_Expression
        |_Term
          |_Factor
            |_Identifier
              |_b
    |_;
